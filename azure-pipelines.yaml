trigger:
  - master
pr:
  - none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts

parameters:
  - name: environments
    displayName: Environements to deploy and dependencies
    default:
      - name: sbox
        dependency: 'CIBuild'
      - name: dev
        dependency: 'sbox'
      - name: test
        dependency: 'dev'
      - name: stg
        dependency: 'test'
      - name: prod
        dependency: 'stg'

variables:
  - group: HMI-APIM-Common
  - name: product
    value: 'hmi'
  - name: businessArea
    value: 'Cross-Cutting'
  - name: builtFrom
    value: $(Build.Repository.Name)
  - name: application
    value: 'hearing-management-interface'
  - name: terraformVersion
    value: '1.0.4'
  - name: displayName
    value: 'Shared Infrastructure'
  - name: resourceGroupName
    value: 'sharedinfra'
  - name: resourcePrefix
    value: 'hmiapim'

stages:

  - stage: CIBuild
    displayName: 'CI Build Application'
    jobs:
      - template: pipeline/jobs/terraform-validate.yaml
        parameters:
          terraformPath: $(Build.SourcesDirectory)/terraform


  - ${{ each environment in parameters.environments }}:

    - stage: 'Plan_sharedinfra_${{ environment.name }}'
      ${{ if eq(environment.dependency, 'CIBuild') }}:
        dependsOn: '${{ environment.dependency }}'
      ${{ if ne(environment.dependency, 'CIBuild') }}:
        dependsOn: 'Apply_sharedinfra_${{ environment.dependency }}'
      displayName: Plan ${{ environment.name }} Shared Infrastructure
      pool:
        vmImage: 'ubuntu-latest'
      variables: 
        - template: pipeline/variables/Shared.yaml
          parameters:
            environment_name: ${{ environment.name }}

      jobs:
        - template: ../jobs/setup-infra.yaml
          parameters:
            displayName: Set up ${{ environment.name }} infrastructure for APIM deployments
            subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
            environment: ${{ environment.name }}
            builtFrom: ${{ variables.builtFrom }}
            businessArea: ${{ variables.businessArea }}
            application: ${{ variables.application }}
            resourceGroupName: ${{ variables.resourceGroupName }}
            containerName: ${{ variables.containerName }}
            storageAccount: ${{ variables.storageAccount }}
            resourcePrefix: ${{ variables.resourcePrefix }}

        - template: ../jobs/terraform-plan.yaml
          parameters:
            displayName: "Plan ${{ environment.name }} Shared Infra"
            dependsOn: setupInfrastructure
            subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
            environment: ${{ environment.name }}
            resourceGroup: $(resourceGroup)
            storageAccount: $(storageAccount)
            containerName: $(containerName)
            builtFrom: ${{ variables.builtFrom }}
            product: ${{ variables.product }}
            variables:
              resourceGroup: ${{ variables.resourceGroupName }}
              containerName: ${{ variables.containerName }}
              storageAccount: ${{ variables.storageAccount }}
            outputName: ${{ variables.planOutputName }}
            workingDirectory: ${{ variables.workingDirectory }}
            serviceName: sharedinfra

    - ${{ if ne(environment.name, 'sbox') }}:
      - stage: 'Wait_sharedinfra_${{ environment.name }}'
        dependsOn: 'Plan_sharedinfra_${{ environment.name }}'
        displayName: Wait ${{ environment.name }} Shared Infrastructure
        pool:
          vmImage: 'ubuntu-latest'

        jobs:
          - job: Wait
            displayName: "Wait for approval"
            pool: server
            steps:
              - template: ../steps/wait.yml
                parameters:
                  environment: ${{ environment.name }}

    - stage: 'Apply_sharedinfra_${{ environment.name }}'
      ${{ if eq(environment.name, 'sbox') }}:
        dependsOn: 'Plan_sharedinfra_${{ environment.name }}'
      ${{ else }}:
        dependsOn: 'Wait_sharedinfra_${{ environment.name }}'
      displayName: Apply ${{ environment.name }} Shared Infrastructure
      pool:
        vmImage: 'ubuntu-latest'
      variables: 
        - template: pipeline/variables/Shared.yaml
          parameters:
            environment_name: ${{ environment.name }}

      jobs:
        - template: ../jobs/terraform-deploy.yaml
          parameters:
            displayName: "Deploy ${{ environment.name }} Shared Infra"
            subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
            environment: ${{ environment.name }}
            resourceGroup: $(resourceGroup)
            storageAccount: $(storageAccount)
            containerName: $(containerName)
            builtFrom: ${{ variables.builtFrom }}
            product: ${{ variables.product }}
            variables:
              resourceGroup: ${{ variables.resourceGroupName }}
              containerName: ${{ variables.containerName }}
              storageAccount: ${{ variables.storageAccount }}
            outputName: '${{ variables.planOutputName }}'
            workingDirectory: ${{ variables.workingDirectory }}
            serviceName: sharedinfra

        - ${{ if eq(service.name,'SharedInfra') }}:
          - template: ../jobs/setup-azmonlink.yaml
            parameters:
              displayName: Set up Azure Monitor Link to Log Analytics
              dependsOn: TerraformDeploy
              subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
              environment: ${{ environment.name }}
              builtFrom: ${{ variables.builtFrom }}
              businessArea: ${{ variables.businessArea }}
