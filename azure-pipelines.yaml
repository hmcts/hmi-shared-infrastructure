trigger:
  - master
pr:
  - none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts

parameters:
  - name: environments
    displayName: Environements to deploy and dependencies
    type: object
    default:
      - name: sbox
        dependency: 'CIBuild'
      - name: dev
        dependency: 'sbox'
      - name: test
        dependency: 'dev'
      - name: stg
        dependency: 'test'
      - name: prod
        dependency: 'stg'

stages:

  - stage: CIBuild
    displayName: 'CI Build Application'
    jobs:
      - template: pipeline/jobs/terraform-validate.yaml
        parameters:
          terraformPath: $(Build.SourcesDirectory)/terraform


  - ${{ each environment in parameters.environments }}:

    - stage: 'Plan_sharedinfra_${{ environment.name }}'
      ${{ if eq(environment.dependency, 'CIBuild') }}:
        dependsOn: '${{ environment.dependency }}'
      ${{ if ne(environment.dependency, 'CIBuild') }}:
        dependsOn: 'Apply_sharedinfra_${{ environment.dependency }}'
      displayName: Plan ${{ environment.name }} Shared Infrastructure
      pool:
        vmImage: 'ubuntu-latest'
      variables: 
        - template: pipeline/variables/Shared.yaml
          parameters:
            environment_name: ${{ environment.name }}

      jobs:
        - template: pipeline/jobs/setup-infra.yaml
          parameters:
            subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
            environment: ${{ environment.name }}
            builtFrom: ${{ variables.builtFrom }}
            businessArea: ${{ variables.businessArea }}
            application: ${{ variables.application }}
            stateResourceGroupName: ${{ variables.stateResourceGroupName }}
            containerName: ${{ variables.containerName }}
            storageAccount: ${{ variables.storageAccount }}
            resourcePrefix: ${{ variables.resourcePrefix }}
            location: ${{ variables.location }}

        - template: pipeline/jobs/terraform-plan.yaml
          parameters:
            subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
            environment: ${{ environment.name }}
            stateResourceGroup: ${{ variables.stateResourceGroupName }}
            storageAccount: ${{ variables.storageAccount }}
            containerName: ${{ variables.containerName }}
            builtFrom: ${{ variables.builtFrom }}
            product: ${{ variables.product }}
            outputName: ${{ variables.planOutputName }}
            workingDirectory: ${{ variables.workingDirectory }}
            location: ${{ variables.location }}

    - ${{ if ne(environment.name, 'sbox') }}:
      - stage: 'Wait_sharedinfra_${{ environment.name }}'
        dependsOn: 'Plan_sharedinfra_${{ environment.name }}'
        displayName: Wait ${{ environment.name }} Shared Infrastructure
        pool:
          vmImage: 'ubuntu-latest'

        jobs:
          - job: Wait
            displayName: "Wait for approval"
            pool: server
            steps:
              - template: pipeline/steps/wait.yml
                parameters:
                  environment: ${{ environment.name }}

    - stage: 'Apply_sharedinfra_${{ environment.name }}'
      ${{ if eq(environment.name, 'sbox') }}:
        dependsOn: 'Plan_sharedinfra_${{ environment.name }}'
      ${{ else }}:
        dependsOn: 'Wait_sharedinfra_${{ environment.name }}'
      displayName: Apply ${{ environment.name }} Shared Infrastructure
      pool:
        vmImage: 'ubuntu-latest'
      variables: 
        - template: pipeline/variables/Shared.yaml
          parameters:
            environment_name: ${{ environment.name }}

      jobs:
        - template: pipeline/jobs/terraform-deploy.yaml
          parameters:
            subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
            environment: ${{ environment.name }}
            stateResourceGroup: ${{ variables.stateResourceGroupName }}
            storageAccount: ${{ variables.storageAccount }}
            containerName: ${{ variables.containerName }}
            builtFrom: ${{ variables.builtFrom }}
            product: ${{ variables.product }}
            outputName: '${{ variables.planOutputName }}'
            workingDirectory: ${{ variables.workingDirectory }}
            location: ${{ variables.location }}

        - template: pipeline/jobs/setup-azmonlink.yaml
          parameters:
            dependsOn: TerraformDeploy
            subscription: DTS-SHAREDSERVICES-${{ upper(environment.name) }}
            environment: ${{ environment.name }}
            builtFrom: ${{ variables.builtFrom }}
            businessArea: ${{ variables.businessArea }}
            location: ${{ variables.location }}
