parameters:
  - name: subscription
    type: string

  - name: resourceGroup
    type: string

  - name: storageAccount
    type: string

  - name: environment
    type: string

  - name: containerName
    type: string

  - name: builtFrom
    type: string

  - name: application
    type: string

  - name: businessArea
    type: string

  - name: location
    type: string

steps:
- task: AzureCLI@2
  displayName: Setup TF State Resource Group
  name: setupResourceGroup
  inputs:
    azureSubscription: ${{ parameters.subscription }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      if [[ ${{ parameters.environment }} = "sbox" ]]; then env="sandbox"; fi
      if [[ ${{ parameters.environment }} = "dev" ]]; then env="development"; fi
      if [[ ${{ parameters.environment }} = "test" ]]; then env="test"; fi
      if [[ ${{ parameters.environment }} = "stg" ]]; then env="staging"; fi
      if [[ ${{ parameters.environment }} = "prod" ]]; then env="production"; fi

      echo "Create Resource Group ${{ parameters.resourceGroup }}"
      az group create --name ${{ parameters.resourceGroup }} --location ${{ parameters.location }} --tags environment=$env businessArea=${{ parameters.businessArea }} application=${{ parameters.application }} builtFrom=${{ parameters.builtFrom }}
      
      echo "Create Storage Account ${{ parameters.storageAccount }}"
      az storage account create --name ${{ parameters.storageAccount }} --resource-group ${{ parameters.resourceGroup }}
      key=$(az storage account keys list -g ${{ parameters.resourceGroup }} --account-name ${{ parameters.storageAccount }} --query "[0].value" -o tsv)
      
      echo "Create Container ${{ parameters.containerName }}"
      az storage container create --name ${{ parameters.containerName }} --account-name ${{ parameters.storageAccount }} --account-key $key
      az storage account blob-service-properties update --account-name ${{ parameters.storageAccount }} --enable-versioning true

