parameters:
  - name: variableName
    type: string
  - name: environment
    type: string
  - name: subscriptionName
    type: string
  - name: outputLocation
    type: string
  - name: resourceGroup
    type: string
    default: ""
  - name: builtFrom
    type: string
    default: ""
  - name: product
    type: string
    default: ""
  - name: service_now_client
    type: string
  - name: service_now_secret
    type: string
  - name: libarySecrets
    type: object
    default:
      - secName: "tf_secret_elinks-token"
        secValue: "$(tf_secret_elinks-token)"
      - secName: "tf_secret_vh-client-app-client"
        secValue: "$(tf_secret_vh-client-app-client)"
      - secName: "tf_secret_vh-client-app-secret"
        secValue: "$(tf_secret_vh-client-app-secret)"
      - secName: "tf_secret_cft-client-app-client"
        secValue: "$(tf_secret_cft-client-app-client)"
      - secName: "tf_secret_cft-client-app-secret"
        secValue: "$(tf_secret_cft-client-app-secret)"
      - secName: "tf_secret_snl-user-id"
        secValue: "$(tf_secret_snl-user-id)"
      - secName: "tf_secret_snl-user-pwd"
        secValue: "$(tf_secret_snl-user-pwd)"
      - secName: "tf_secret_servicenow-auth"
        secValue: "$(tf_secret_servicenow-auth)"

steps:

  - task: AzureCLI@2
    displayName: 'GlobalNetworkPeering Details'
    name: GlobalNetworkPeering
    inputs:
      azureSubscription: 'GlobalNetworkPeering'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      addSpnToEnvironment: true
      inlineScript: |
        Write-Host "##vso[task.setvariable variable=GNP_CLIENT_ID;isOutput=true]$($env:servicePrincipalId)"
        Write-Host "Client ID: $($env:servicePrincipalId)"
        Write-Host "##vso[task.setvariable variable=GNP_CLIENT_SECRET;isOutput=true]$($env:servicePrincipalKey)"
        Write-Host "##vso[task.setvariable variable=GNP_TENANT_ID;isOutput=true]$($env:tenantId)"
        Write-Host "Tenant ID: $($env:tenantId)"
        $subscriptionId = az account show --query id -o tsv
        Write-Host "##vso[task.setvariable variable=GNP_SUBSCRIPTION_ID;isOutput=true]$subscriptionId"
        Write-Host "Subscription ID: $subscriptionId"

  - template: get-secure-file.yaml
    parameters:
      fileName: "policy-variables-${{ parameters.environment }}.json"
      variableName: "secure_file_json"
  
  - task: AzureCLI@2
    displayName: Set policy file to key vault
    inputs:
      azureSubscription: ${{ parameters.subscriptionName }}
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: az keyvault secret set --name "HMI-APIM-BUILD-${{ upper(parameters.environment) }}-json" --value "$(secure_file_json)" --vault-name "hmi-shared-kv-${{ parameters.environment }}"

  - template: templates\common\get-variable-group.yml@azTemplates 
    parameters:
      subscriptionName: ${{ parameters.subscriptionName }}
      variableGroupName: "HMI-APIM-BUILD-${{ upper(parameters.environment) }}"
      variableName: "variable_group_json"

  - template: templates/Azure/Common/get-service-connection-details.yaml@azTemplates 
    parameters:
      subscriptionName: ${{ parameters.subscriptionName }}

  - bash: |      
      variableName="${{ parameters.variableName }}"
      service_now_client=${{ parameters.service_now_client }} 
      service_now_secret=${{ parameters.service_now_secret }}

      variables=""
      variables="-var-file=\"$(System.DefaultWorkingDirectory)/environments/${{ parameters.environment }}.tfvars\""
      variables="${variables} -var-file=\"$(System.DefaultWorkingDirectory)/environments/shared.tfvars\""
      variables="${variables} -out=\"${{ parameters.outputLocation }}\""
      variables="${variables} -var \"resource_group=${{ parameters.resourceGroup }}\""
      variables="${variables} -var \"log_analytics_subscription_id=$(log_analytics_subscription_id)\""
      variables="${variables} -var \"builtFrom=${{ parameters.builtFrom }} \""
      variables="${variables} -var \"network_client_id=${GNP_CLIENT_ID} \""
      variables="${variables} -var \"network_client_secret=${GNP_CLIENT_SECRET} \""
      variables="${variables} -var \"network_tenant_id=${GNP_TENANT_ID} \""
      variables="${variables} -var \"service_now_client=${service_now_client}\""
      variables="${variables} -var \"service_now_secret=${service_now_secret}\""
      variables="${variables} -var \"current_client_secret=${GEN_CLIENT_SECRET}\""
      variables="${variables} -var \"current_client_id=${GEN_CLIENT_ID}\""
      

      secretArr=$(env -0 | while IFS='=' read -r -d '' n v; do
        envName="$n"
        #echo "processing $envName"
        if [[ "${envName}" == 'tf_secret_'* ]]; then
          envName="${envName//tf_secret_/}"
          envValue="$v"
          #echo "found $envName"
          echo "{\\\"name\\\":\\\"$envName\\\",\\\"value\\\":\\\"$envValue\\\"},"
          #echo "found $secretArr"
        fi
      done)
      secretArr="[${secretArr//[$'\t\r\n']}]"
      variables="${variables} -var \"secrets_arr=${secretArr}\""

      echo "Variables set as: "
      echo "${variables}"
      echo "##vso[task.setvariable variable=$variableName;isOutput=true]${variables}"

    displayName: 'Set Shared Services TF Variables'
    name: tfVariables
    env:
      GNP_CLIENT_ID: $(GlobalNetworkPeering.GNP_CLIENT_ID) 
      GNP_CLIENT_SECRET: $(GlobalNetworkPeering.GNP_CLIENT_SECRET) 
      GNP_TENANT_ID: $(GlobalNetworkPeering.GNP_TENANT_ID) 
      GEN_CLIENT_ID: $(serviceConnection.ARM_CLIENT_ID)
      GEN_CLIENT_SECRET: $(serviceConnection.ARM_CLIENT_SECRET)
      ${{ each sec in parameters.libarySecrets }}:
        "${{ sec.secName }}" : "${{ sec.secValue }}"