parameters:
  - name: subscription
    type: string

  - name: environment
    type: string
    
steps:
- task: AzurePowerShell@5
  name: getspid
  displayName: Getting SP Id
  inputs:
    azureSubscription: ${{ parameters.subscription }}
    ScriptType: 'InlineScript'
    Inline: |
      echo "Obtaining Service Principal Id"
      $sp = (Get-AzContext).Account.Id
      $spid = (Get-AzADServicePrincipal -ApplicationId $sp)
      $spid = $spid.Id
      echo "##vso[task.setvariable variable=spid;isOutput=true;isSecret=true;]$spid"
    azurePowerShellVersion: 'LatestVersion'

# - task: AzureCLI@2
#   name: updatekv
#   displayName: Updating KeyVault Permissions
#   inputs:
#     azureSubscription: ${{ parameters.subscription }}
#     scriptType: bash
#     scriptLocation: inlineScript
#     inlineScript: |
#       echo "Updating KeyVault Permissions"

#       env="${{ parameters.environment }}"
#       kv_name="hmi-shared-kv-${env}"
#       sp_id="$(getspid.spid) "

#       kvId=$(az keyvault show --name $kv_name --query "id" -o tsv)

#       if [[ $kvId != "" ]]; then
#         echo "Updating KeyVault Permissions"
#         az keyvault set-policy --name $kv_name --object-id $sp_id  --secret-permissions backup delete get list purge recover restore set --certificate-permissions purge backup create delete deleteissuers get getissuers import list listissuers managecontacts manageissuers setissuers update
#       else 
#         echo "Key Vault doesn't exist"
#       fi

      

      