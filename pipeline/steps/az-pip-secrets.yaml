parameters:
  - name: subscriptionName
    type: string
  - name: environment
    type: string
  
steps:
  - task: AzureCLI@2
    displayName: 'Sync PIP Secrets to HMI Key Vault'
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $env="${{ parameters.environment }}"

        $pip_env = $env
        if ($pip_env -ne "prod"){
          $pip_env = "stg"
          $pip_sub_id = "74dacd4f-a248-45bb-a2f0-af700dc4cf68"
        } else {
          $pip_sub_id = az account show -s "dts-sharedservices-$pip_env" --query "id" -o tsv 
        } 

        $pip_kv_name = "pip-ss-apim-kv-$pip_env"

        $hmi_kv_name = "hmi-shared-kv-$env"

        $secret_settings = @(
          [PSCustomObject]@{
            src_secret_name = "app-tenant-id"
            target_secret_name = "pip-tenant-id"
          },
          [PSCustomObject]@{
            src_secret_name = "app-pip-apim-hmi-id"
            target_secret_name = "pip-client-id"
          }
          [PSCustomObject]@{
            src_secret_name = "app-pip-apim-hmi-pwd"
            target_secret_name = "pip-client-pwd"
          }
          [PSCustomObject]@{
            src_secret_name = "app-pip-data-management-scope"
            target_secret_name = "pip-data-mgnt-scope"
          }
        )

        foreach ($secret_setting in $secret_settings){
          Write-Host "Get Value for $($secret_setting.src_secret_name) in $pip_kv_name ($pip_sub_id)"
          $val = az keyvault secret show --name $secret_setting.src_secret_name --vault-name $pip_kv_name --subscription $pip_sub_id -o tsv --query "value"

          Write-Host "Create/Update Secret $($secret_setting.target_secret_name) in $hmi_kv_name"
          az keyvault secret set --name $secret_setting.target_secret_name --vault-name $hmi_kv_name --value $val
        }
