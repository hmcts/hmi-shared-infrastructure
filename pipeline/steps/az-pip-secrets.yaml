parameters:
  - name: sourceSubscription
    type: string
  - name: targetSubscription
    type: string
  - name: environment
    type: string
  - name: secretSettings 
    type: object
    default: 
      - src_secret_name: "app-tenant-id"
        target_secret_name: "pip-tenant-id"
      - src_secret_name: "app-pip-apim-hmi-id"
        target_secret_name: "pip-client-id"
      - src_secret_name: "app-pip-apim-hmi-pwd"
        target_secret_name: "pip-client-pwd"
      - src_secret_name: "app-pip-data-management-scope"
        target_secret_name: "pip-data-mgnt-scope"
  
steps:
  - ${{ each setting in parameters.secretSettings }}:
    - task: AzureCLI@2
      displayName: 'Get ${{ setting.src_secret_name }} Secret'
      name: ${{ replace(setting.src_secret_name,'-','_') }}_secret
      inputs:
        azureSubscription: '${{ parameters.sourceSubscription }}'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $env="${{ parameters.environment }}"
          $src_secret_name="${{ setting.src_secret_name }}"

          $pip_env = $env
          if ($pip_env -ne "prod"){
            $pip_env = "stg"
          } 

          $pip_kv_name = "pip-ss-apim-kv-$pip_env"

          $val = az keyvault secret show --name $src_secret_name --vault-name $pip_kv_name -o tsv --query "value"
          Write-Host "##vso[task.setvariable variable=VaultSecret;isOutput=true;issecret=true]$val"

    - task: AzureCLI@2
      displayName: 'Set ${{ setting.target_secret_name }} Secret'
      inputs:
        azureSubscription: '${{ parameters.targetSubscription }}'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $env="${{ parameters.environment }}"
          $secretValue = "$($env:secretValue)"
          $target_secret_name="${{ setting.target_secret_name }}"

          $hmi_kv_name = "hmi-shared-kv-$env"

          Write-Host "Create/Update Secret $target_secret_name in $hmi_kv_name"
          az keyvault secret set --name $target_secret_name --vault-name $hmi_kv_name --value $secretValue
      env:
        secretValue: $(${{ replace(setting.src_secret_name,'-','_') }}_secret.VaultSecret)