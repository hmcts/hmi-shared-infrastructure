parameters:
  - name: variableName
    type: string
  - name: environment
    type: string
  - name: subscriptionName
    type: string
  - name: outputLocation
    type: string
  - name: resourceGroup
    type: string
    default: ""
  - name: builtFrom
    type: string
    default: ""
  - name: product
    type: string
    default: ""
  - name: service_now_client
    type: string
    default: ""
  - name: service_now_secret
    type: string
    default: ""
  - name: libarySecrets
    type: object
    default:
      - secName: "elinks_token"
        secValue: "$(elinks_token)"

steps:

  - bash: |
      variableName="${{ parameters.variableName }}"
      secureFileJson=$(printenv secure_file_json)
      variableGroupJson=$(printenv variable_group_json)

      variables=""
      variables="-var-file=\"$(System.DefaultWorkingDirectory)/environments/${{ parameters.environment }}.tfvars\""
      variables="${variables} -var-file=\"$(System.DefaultWorkingDirectory)/environments/shared.tfvars\""
      variables="${variables} -out=\"${{ parameters.outputLocation }}\""

      secretArr=$(env -0 | while IFS='=' read -r -d '' n v; do
        envName="$n"
        #echo "processing $envName"
        if [[ "${envName}" == 'tf_secret_'* ]]; then
          envName="${envName//tf_secret_/}"
          envValue="$v"
          #echo "found $envName"
          echo "{\\\"name\\\":\\\"$envName\\\",\\\"value\\\":\\\"$envValue\\\"},"
          #echo "found $secretArr"
        fi
      done)
      secretArr="[${secretArr//[$'\t\r\n']}]"
      variables="${variables} -var \"secrets_arr=${secretArr}\""

      echo "Variables set as: "
      echo "${variables}"
      echo "##vso[task.setvariable variable=$variableName;isOutput=true]${variables}"
    displayName: 'Set Shared Services TF Variables'
    name: tfVariables
    env:
      secure_file_json: $(secureFileVariable.secure_file_json_path)
      variable_group_json: $(variableGroupDownload.variable_group_json_path)
      ${{ each sec in parameters.libarySecrets }}:
        "${{ sec.secName }}" : "${{ sec.secValue }}"