parameters:
  - name: subscription
    type: string
  - name: dependsOn
    type: string
  - name: resourceGroup
    type: string
  - name: storageAccount
    type: string
  - name: containerName
    type: string
  - name: variables
    type: object
  - name: displayName
    type: string
  - name: environment
    type: string
  - name: builtFrom
    type: string
    default: ''
  - name: product
    type: string
    default: ''
  - name: outputName
    type: string
  - name: workingDirectory
    type: string

jobs:
- job: TerraformPlan
  dependsOn:
  - ${{ if parameters.dependsOn }}:
    - ${{ parameters.dependsOn }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'ubuntu-20.04'
  variables:
    ${{ insert }}: ${{ parameters.variables }}
  steps:
  - template: ../steps/tf-install.yaml
  - template: ../steps/tf-init.yaml
    parameters:
      subscription: ${{ parameters.subscription }}
      environment: ${{ parameters.environment }}
      resourceGroup: ${{ variables.resourceGroup }}
      storageAccount: ${{ variables.storageAccount }}
      containerName: ${{ variables.containerName }}
      workingDirectory: ${{ parameters.workingDirectory }}
  - bash: |
      mkdir '$(Build.SourcesDirectory)/plans'
    displayName: Create plan directory
  - template: ../steps/tf-plan.yaml
    parameters:
      subscription: ${{ parameters.subscription }}
      resourceGroup: $(resourceGroup)
      environment: ${{ parameters.environment }}
      builtFrom: ${{ parameters.builtFrom }}
      product: ${{ parameters.product }}
      outputLocation: '$(Build.SourcesDirectory)/plans/${{ parameters.outputName }}.tfplan'
      workingDirectory: ${{ parameters.workingDirectory }}
  
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Terraform Plan'
    inputs:
      targetPath: '$(Build.SourcesDirectory)/plans/${{ parameters.outputName }}.tfplan'
      artifact: '${{ parameters.outputName }}'

  